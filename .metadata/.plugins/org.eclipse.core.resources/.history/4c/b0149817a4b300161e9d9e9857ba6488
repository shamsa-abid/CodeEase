package lums.cbrs.completion;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.nio.file.Paths;
import java.util.ArrayList;

public class CodeCompletion {

	private ArrayList<String> readFileMethodNames = new ArrayList<String>();
	private ArrayList<String> methodBodies = new ArrayList<String>();
	private ArrayList<String> friendMethodBodies = new ArrayList<String>();
	private ArrayList<String> writeFileMethodNames = new ArrayList<String>();

	public CodeCompletion()
	{
		readFileMethodNames.add("readFile()");
		readFileMethodNames.add("readFile()");
		readFileMethodNames.add("readSmallTextFile(String aFileName)");		
		readFileMethodNames.add("readLargerTextFile(String aFileName)");
		readFileMethodNames.add("readLargerTextFileAlternate(String aFileName)");		
	
		writeFileMethodNames.add("writeFile()");
		writeFileMethodNames.add("writeSmallTextFile(List<String> aLines, String aFileName)");
		writeFileMethodNames.add("writeLargerTextFile(String aFileName, List<String> aLines)");
		writeFileMethodNames.add("writeToTextFile(String fileName, String content)");
		writeFileMethodNames.add("writeFile()");
			
		friendMethodBodies.add("String[] simpleArray1 = list.toArray(new String[list.size()]);");
		friendMethodBodies.add("String[] simpleArray2 = list.toArray(new String[list.size()]);");
		friendMethodBodies.add("String[] simpleArray3 = list.toArray(new String[list.size()]);");
				
	}
	
	public void setMethodNames(ArrayList<String> methodNames) {
		this.readFileMethodNames = methodNames;
	}

	public ArrayList<String> getReadFileMethodNames()
	{
		return readFileMethodNames;
	}
	public ArrayList<String> getWriteFileMethodNames()
	{
		return writeFileMethodNames;
	}
	
	public ArrayList<String> getFileReadMethodBody(int elementNumber)
	{
		ArrayList<String> result = new ArrayList<String>();		
		switch(elementNumber)
		{
		case 1:
				result = fileRead("ReadFile/readFile1.txt");
			break;
		case 2:
			result = fileRead("F:\\PhD\\HCI\\PluginDev\\RecommenderSystem\\ReadFile\\readFile2.txt");
			break;
		case 3:
			result = fileRead("F:\\PhD\\HCI\\PluginDev\\RecommenderSystem\\ReadFile\\readFile3.txt");
			break;
		case 4:
			result = fileRead("F:\\PhD\\HCI\\PluginDev\\RecommenderSystem\\ReadFile\\readFile4.txt");
			break;
		case 5:
			result = fileRead("F:\\PhD\\HCI\\PluginDev\\RecommenderSystem\\ReadFile\\readFile5.txt");
			break;	
		}
		return result;
	}
	public ArrayList<String> getFileWriteMethodBody(int elementNumber)
	{
		ArrayList<String> result = new ArrayList<String>();		
		switch(elementNumber)
		{
		case 1:
			result = fileRead("F:\\PhD\\HCI\\PluginDev\\RecommenderSystem\\WriteFile\\writeFile1.txt");
			break;
		case 2:
			result = fileRead("F:\\PhD\\HCI\\PluginDev\\RecommenderSystem\\WriteFile\\writeFile2.txt");
			break;
		case 3:
			result = fileRead("F:\\PhD\\HCI\\PluginDev\\RecommenderSystem\\WriteFile\\writeFile3.txt");
			break;
		case 4:
			result = fileRead("F:\\PhD\\HCI\\PluginDev\\RecommenderSystem\\WriteFile\\writeFile4.txt");
			break;
		case 5:
			result = fileRead("F:\\PhD\\HCI\\PluginDev\\RecommenderSystem\\WriteFile\\writeFile5.txt");
			break;	
		}
		return result;
	}
	
	public static void main(String args[])
	{}
	
	public static ArrayList<String> fileRead(String pathName){
		File f;
		String s;
		FileReader fr = null;
		BufferedReader br = null;
		ArrayList<String> sl = new ArrayList<String>();
		try {
			//Class.getResource(fileName);
			f = new File(pathName);
			fr = new FileReader(f);
			br = new BufferedReader(fr);
			while ((s = br.readLine()) != null) {
				sl.add(s);
				System.out.println(s);
			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if (br != null)
					br.close();
				if (fr != null)
					fr.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return sl;
	}

}
